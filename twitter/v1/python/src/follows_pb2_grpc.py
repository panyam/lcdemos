# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import follows_pb2 as follows__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FollowServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFollowers = channel.unary_unary(
                '/FollowService/GetFollowers',
                request_serializer=follows__pb2.GetFollowRequest.SerializeToString,
                response_deserializer=follows__pb2.GetFollowResponse.FromString,
                )
        self.GetFollowees = channel.unary_unary(
                '/FollowService/GetFollowees',
                request_serializer=follows__pb2.GetFollowRequest.SerializeToString,
                response_deserializer=follows__pb2.GetFollowResponse.FromString,
                )
        self.CreateFollow = channel.unary_unary(
                '/FollowService/CreateFollow',
                request_serializer=follows__pb2.CreateFollowRequest.SerializeToString,
                response_deserializer=follows__pb2.Follow.FromString,
                )
        self.DeleteFollow = channel.unary_unary(
                '/FollowService/DeleteFollow',
                request_serializer=follows__pb2.DeleteFollowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class FollowServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetFollowers(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowees(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFollow(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFollow(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FollowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFollowers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowers,
                    request_deserializer=follows__pb2.GetFollowRequest.FromString,
                    response_serializer=follows__pb2.GetFollowResponse.SerializeToString,
            ),
            'GetFollowees': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowees,
                    request_deserializer=follows__pb2.GetFollowRequest.FromString,
                    response_serializer=follows__pb2.GetFollowResponse.SerializeToString,
            ),
            'CreateFollow': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFollow,
                    request_deserializer=follows__pb2.CreateFollowRequest.FromString,
                    response_serializer=follows__pb2.Follow.SerializeToString,
            ),
            'DeleteFollow': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFollow,
                    request_deserializer=follows__pb2.DeleteFollowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FollowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FollowService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetFollowers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FollowService/GetFollowers',
            follows__pb2.GetFollowRequest.SerializeToString,
            follows__pb2.GetFollowResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FollowService/GetFollowees',
            follows__pb2.GetFollowRequest.SerializeToString,
            follows__pb2.GetFollowResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FollowService/CreateFollow',
            follows__pb2.CreateFollowRequest.SerializeToString,
            follows__pb2.Follow.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FollowService/DeleteFollow',
            follows__pb2.DeleteFollowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
