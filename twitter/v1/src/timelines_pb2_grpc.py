# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import timelines_pb2 as timelines__pb2


class TimelineServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTweets = channel.unary_unary(
                '/TimelineService/ListTweets',
                request_serializer=timelines__pb2.ListTweetsRequest.SerializeToString,
                response_deserializer=timelines__pb2.Timeline.FromString,
                )
        self.GetTimeline = channel.unary_unary(
                '/TimelineService/GetTimeline',
                request_serializer=timelines__pb2.ListTweetsRequest.SerializeToString,
                response_deserializer=timelines__pb2.Timeline.FromString,
                )


class TimelineServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def ListTweets(self, request, context):
        """Returns a user's home timeline with recent N tweets from 
        all users the user follows
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeline(self, request, context):
        """Returns most recent N tweets for a user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TimelineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTweets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTweets,
                    request_deserializer=timelines__pb2.ListTweetsRequest.FromString,
                    response_serializer=timelines__pb2.Timeline.SerializeToString,
            ),
            'GetTimeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeline,
                    request_deserializer=timelines__pb2.ListTweetsRequest.FromString,
                    response_serializer=timelines__pb2.Timeline.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TimelineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TimelineService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def ListTweets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TimelineService/ListTweets',
            timelines__pb2.ListTweetsRequest.SerializeToString,
            timelines__pb2.Timeline.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TimelineService/GetTimeline',
            timelines__pb2.ListTweetsRequest.SerializeToString,
            timelines__pb2.Timeline.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
